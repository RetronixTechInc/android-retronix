# Register component to core. The component role priority is [1, 5]. 1 is the lowest
# priority, 5 is the highest priority. 3 is the default priority if the component role
# priority hasn't set. The component role priority should be set immediately after the
# component role.
#
# Usage:
# @ means the begin of one component.
# # means comments.
# $ means the end of one component.
# ; means finish of one tag value.
# envirenment value should be set: COMPONENT_REGISTER_FILE=../registry/component_register

@
include_file=/vendor/etc/component_register_ac3;
include_file=/vendor/etc/component_register_ddp;
include_file=/vendor/etc/component_register_ms;
include_file=/vendor/etc/component_register_wmv9;
include_file=/vendor/etc/component_register_ra;
include_file=/vendor/etc/component_register_rv;
$

@
component_name=OMX.Freescale.std.audio_decoder.mp3.sw-based;
library_path=lib_omx_mp3_dec_v2_arm11_elinux.so;
component_entry_function=Mp3DecInit;
component_role=audio_decoder.mp3;
role_priority=2;
$

@
component_name=OMX.Freescale.std.audio_decoder.amrnb.sw-based;
library_path=lib_omx_amr_dec_v2_arm11_elinux.so;
component_entry_function=AmrDecInit;
component_role=audio_decoder.amrnb;
role_priority=3;
$

@
component_name=OMX.Freescale.std.audio_decoder.amrwb.sw-based;
library_path=lib_omx_amr_dec_v2_arm11_elinux.so;
component_entry_function=AmrDecInit;
component_role=audio_decoder.amrwb;
role_priority=3;
$

@
component_name=OMX.Freescale.std.audio_decoder.pcm.sw-based;
library_path=lib_omx_pcm_dec_v2_arm11_elinux.so;
component_entry_function=PcmDecInit;
component_role=audio_decoder.pcm;
role_priority=3;
$

@
component_name=OMX.Freescale.std.audio_decoder.aac.sw-based;
library_path=lib_omx_aac_dec_v2_arm11_elinux.so;
component_entry_function=AacDecInit;
component_role=audio_decoder.aac-fsl;
role_priority=2;
$

@
component_name=OMX.Freescale.std.video_decoder.sorenson.sw-based;
library_path=lib_omx_sorenson_dec_v2_arm11_elinux.so;
component_entry_function=SorensonDecoderInit;
component_role=video_decoder.sorenson;
role_priority=2;
$

@
component_name=OMX.Freescale.std.video_decoder.avc.v3.hw-based;
library_path=lib_omx_vpu_dec_v2_arm11_elinux.so;
component_entry_function=VpuDecoderInit;
component_role=video_decoder.avc;
role_priority=3;
$

@
component_name=OMX.Freescale.std.video_decoder.hevc.hw-based;
library_path=lib_omx_vpu_dec_v2_arm11_elinux.so;
component_entry_function=VpuDecoderInit;
component_role=video_decoder.hevc;
role_priority=3;
$

@
component_name=OMX.Freescale.std.video_decoder.avc.v3.hw-based.secure;
library_path=lib_omx_vpu_dec_v2_arm11_elinux.so;
component_entry_function=VpuDecoderInit;
component_role=video_decoder.avc;
role_priority=3;
$

@
component_name=OMX.Freescale.std.video_decoder.hevc.hw-based.secure;
library_path=lib_omx_vpu_dec_v2_arm11_elinux.so;
component_entry_function=VpuDecoderInit;
component_role=video_decoder.hevc;
role_priority=3;
$

@
component_name=OMX.Freescale.std.video_decoder.vp9.hw-based;
library_path=lib_omx_vpu_dec_v2_arm11_elinux.so;
component_entry_function=VpuDecoderInit;
component_role=video_decoder.vp9;
role_priority=3;
$

# Add the component and role for StageFright.
@
component_name=OMX.Freescale.std.video_decoder.vp8.hw-based;
library_path=lib_omx_vpu_dec_v2_arm11_elinux.so;
component_entry_function=VpuDecoderInit;
component_role=video_decoder.vp8;
role_priority=3;
$

@
component_name=OMX.Freescale.std.audio_decoder.flac.sw-based;
library_path=lib_omx_flac_dec_v2_arm11_elinux.so;
component_entry_function=FlacDecInit;
component_role=audio_decoder.flac;
role_priority=3;
$

@
component_name=OMX.Freescale.std.video_encoder.avc.hw-based;
library_path=lib_omx_vpu_enc_v2_arm11_elinux.so;
component_entry_function=VpuEncoderInit;
component_role=video_encoder.avc;
role_priority=3;
$

@
component_name=OMX.Freescale.std.video_encoder.vp8.hw-based;
library_path=lib_omx_vpu_enc_v2_arm11_elinux.so;
component_entry_function=VpuEncoderInit;
component_role=video_encoder.vp8;
role_priority=3;
$
