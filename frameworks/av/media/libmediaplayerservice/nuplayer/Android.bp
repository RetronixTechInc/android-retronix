cc_library_static {

    srcs: [
        "AWakeLock.cpp",
        "GenericSource.cpp",
        "HTTPLiveSource.cpp",
        "NuPlayer.cpp",
        "NuPlayerCCDecoder.cpp",
        "NuPlayerDecoder.cpp",
        "NuPlayerDecoderBase.cpp",
        "NuPlayerDecoderPassThrough.cpp",
        "NuPlayerDriver.cpp",
        "NuPlayerDrm.cpp",
        "NuPlayerRenderer.cpp",
        "NuPlayerStreamListener.cpp",
        "RTSPSource.cpp",
        "StreamingSource.cpp",
        "GenericStreamSource.cpp",
        "SessionManager.cpp",
        "RTPSessionManager.cpp",
        "UDPSessionManager.cpp",
        "StreamingDataSource.cpp",
        "NuPlayerDecoderPassThroughAC3.cpp",
        "NuPlayerDecoderPassThroughDDP.cpp",
    ],

    header_libs: [
        "media_plugin_headers",
    ],

    include_dirs: [
        "frameworks/av/media/libstagefright",
        "frameworks/av/media/libstagefright/httplive",
        "frameworks/av/media/libstagefright/include",
        "frameworks/av/media/libstagefright/mpeg2ts",
        "frameworks/av/media/libstagefright/rtsp",
        "frameworks/av/media/libstagefright/timedtext",
    ],

    cflags: [
        "-Werror",
        "-Wall",
    ],


    product_variables: {
        debuggable: {
            cflags: ["-DENABLE_STAGEFRIGHT_EXPERIMENTS"],
        },
        hantro_vpu: {
            // enable HANTRO_VPU only when BOARD_VPU_TYPE=hantro
            cflags: ["-DHANTRO_VPU"],
        },
        chipsmedia_vpu: {
            // enable DCHIPSMEDIA_VPU only when BOARD_VPU_TYPE=chipsmedia
            cflags: ["-DCHIPSMEDIA_VPU"],
        },
        malone_vpu: {
            // enable DMALONE_VPU only when BOARD_VPU_TYPE=malone
            cflags: ["-DMALONE_VPU"],
        },
    },

    shared_libs: [
        "libbinder",
        "libui",
        "libgui",
        "libmedia",
        "libmediadrm",
        "libpowermanager",
    ],

    name: "libstagefright_nuplayer",

    tags: ["eng"],

    sanitize: {
        cfi: true,
        diag: {
            cfi: true,
        },
    },

}
